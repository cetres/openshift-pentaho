apiVersion: v1
kind: Template
template: pentaho
metadata:
  name: pentaho
  annotations:
    openshift.io/display-name: "Pentaho Carte server" 
    description: "A simple slave server for Pentaho"
    iconClass: "icon-play"
    template.openshift.io/provider-display-name: "Apartamento 101"
    template.openshift.io/documentation-url: "https://github.com/cetres/openshift-pentaho"
    tags: "pentaho,pdi,kettle,bi,carte,data,etl"
    openshift.io/support-url: "https://github.com/cetres/openshift-pentaho"
message: "Your admin credentials are ${SERVER_USER}:${SERVER_PASSWD} at ${SERVER_NAME}" 
labels:
  app: pentaho-carte
parameters:
- description: The name of the environment
  displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: pentaho
- description: User for athentication
  displayName: Username
  name: SERVER_USER
  required: true
  value: admin
- description: Password for athentication
  displayName: Password
  name: SERVER_PASSWD
  required: true
  value: admin
- description: Carte server URL for router (example pentaho.openshift.intranet)
  displayName: Server URL
  name: SERVER_NAME
  required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: pentaho
    name: ${APPLICATION_NAME}-app
  spec:
    tags:
    - from:
        kind: DockerImage
        name: cetres/openshift-pentaho
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: pentaho
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: pentaho
      deploymentconfig: pentaho
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: pentaho
          deploymentconfig: pentaho
      spec:
        containers:
        - env:
          - name: SERVER_USER
            value: ${SERVER_USER}
          - name: SERVER_PASSWD
            value: ${SERVER_PASSWD}
          - name: SERVER_HOST
            value: 0.0.0.0
          - name: SERVER_NAME
            value: ${SERVER_NAME}
          image: cetres/openshift-pentaho:latest
          imagePullPolicy: Always
          name: pentaho
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/pentaho/repository
            name: pentaho-repository
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: pentaho-repository
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - pentaho
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-app:latest
      type: ImageChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: pentaho
    name: ${APPLICATION_NAME}
  spec:
    host: ${SERVER_NAME}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: pentaho
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: pentaho
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: pentaho
    sessionAffinity: None
    type: ClusterIP
